name: CI

on:
  push:
    branches: [main]
  pull_request:
  merge_group:
    types: [checks_requested]

jobs:
  ci:
    name: CI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: [stable, beta, nightly]
    steps:
      - uses: actions/checkout@v4

      - name: Set toolchain
        run: |
          rustup set profile minimal
          rustup override set ${{ matrix.version }}

      - name: Init submodules
        run: git submodule update --init

      - name: Cargo bench
        if: matrix.version != '1.41.0'
        run: cargo bench --all
        env:
          RUSTFLAGS: --cfg bench

      - name: Test "rustc-test/capture" feature
        if: matrix.version == 'nightly'
        working-directory: rcdom
        run: cargo test --features "rustc-test/capture"

      - name: Cargo test
        if: matrix.version != 'nightly'
        run: cargo test --all

      - name: Cargo doc
        if: matrix.version == 'nightly'
        run: cargo doc

  msrv:
    name: MSRV
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install stable toolchain
        run: |
          rustup set profile minimal
          rustup override set 1.60.0

      - run: cargo check --lib --all-features

  build_result:
    name: Result
    runs-on: ubuntu-latest
    needs:
      - "ci"

    steps:
      - name: Mark the job as successful
        run: exit 0
        if: success()
      - name: Mark the job as unsuccessful
        run: exit 1
        if: ${{ !success() }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install stable toolchain
        run: |
          rustup set profile minimal
          rustup override set stable

      - name: Install clippy
        run: |
          rustup component add clippy
          rustup component add rustfmt

      - name: Format
        run: cargo fmt --all -- --check

      - name: Run clippy
        run: cargo clippy --all-features --all-targets -- -D warnings
